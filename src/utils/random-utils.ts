/**
 * Returns a random string composed of lowercase alphabets and digits.
 *
 * This utility function is used within the CloudFormation parser to generate random strings, which
 * can serve as unique identifiers or for testing purposes. The length of the generated string is chosen
 * at random between the specified minimum and maximum lengths.
 *
 * @param minLength - The minimum length of the random string; defaults to 5.
 * @param maxLength - The maximum length of the random string; defaults to 15.
 * @returns A random string with a length between minLength and maxLength.
 */
export function randomString(minLength: number = 5, maxLength: number = 15): string {
    const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';
    // Randomly choose a length between minLength and maxLength (inclusive).
    const len = Math.floor(Math.random() * (maxLength - minLength + 1)) + minLength;
    let result = '';
    for (let i = 0; i < len; i++) {
        // Append a random character from the available character set.
        result += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    return result;
}

/**
 * Returns a random integer between the specified bounds (inclusive).
 *
 * This function is useful in generating random numbers for testing and dynamic identifier generation
 * within the CloudFormation parser.
 *
 * @param min - The minimum bound for the random integer; defaults to 1.
 * @param max - The maximum bound for the random integer; defaults to 100.
 * @returns A random integer between min and max.
 */
export function randomInteger(min: number = 1, max: number = 100): number {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

/**
 * Generates an array with random items produced by a generator function.
 *
 * This function is used to create an array with a random number of items, where each item is generated
 * by the provided itemGenerator function. It is useful for dynamically creating test arrays or populating
 * parts of the CloudFormation parser that may require an array of random values.
 *
 * @param itemGenerator - A function that generates an item.
 * @param minItems - The minimum number of items in the array; defaults to 1.
 * @param maxItems - The maximum number of items in the array; defaults to 5.
 * @returns An array populated with items generated by the itemGenerator function.
 */
export function randomArray<T>(itemGenerator: () => T, minItems: number = 1, maxItems: number = 5): T[] {
    const length = Math.floor(Math.random() * (maxItems - minItems + 1)) + minItems;
    const array: T[] = [];
    for (let i = 0; i < length; i++) {
        array.push(itemGenerator());
    }
    return array;
}
