import log from 'loglevel';
import { ApiGatewayModelResource, CloudFormationResource } from '../../../types/cloudformation-model';
import { ResolvingContext, ResourceSpecificFunc } from '../../types/types';
import { generateAlphaNumeric, resolveString, resolveStringWithDefault } from '../../utils/helper-utils';

/**
 * Resource specific functions for AWS API Gateway Model resources.
 *
 * This object provides the implementation for resolving intrinsic references, generating ARNs, and producing
 * unique identifiers for API Gateway Model resources in AWS CloudFormation templates.
 *
 * Functions included:
 * - refFunc: Returns a reference for the resource by generating its unique ID.
 * - getAttFunc: Retrieves an attribute (only the resource ID is supported) for the resource.
 * - arnGenFunc: Constructs the ARN for the resource based on its properties and the environment.
 * - idGenFunc: Generates (or returns a cached) unique identifier for the resource.
 *
 * @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#aws-resource-apigateway-model-return-values
 */
export const awsApiGatewayModelFunc: ResourceSpecificFunc = {
    /**
     * Resolves the reference for an API Gateway Model resource.
     *
     * When the CloudFormation template uses the "Ref" intrinsic on a model resource,
     * this function is called to generate and return the model's unique ID.
     * It delegates the ID generation to the idGenFunc.
     *
     * @param resourceType - The type of the resource.
     * @param logicalId - The logical ID of the resource.
     * @param resource - The CloudFormation resource object.
     * @param ctx - The resolving context providing environment and template details.
     * @returns The generated resource ID.
     */
    refFunc: (
        resourceType: string,
        logicalId: string,
        resource: CloudFormationResource,
        ctx: ResolvingContext,
    ): unknown => {
        log.trace(`Called refFunc, for ${resourceType}, with logicalId=${logicalId}`, resource, ctx);
        // Delegate to idGenFunc to generate and return the unique resource ID.
        return awsApiGatewayModelFunc.idGenFunc(resourceType, logicalId, resource, ctx);
    },

    /**
     * Retrieves an attribute from an API Gateway Model resource.
     *
     * This function is used to process "Fn::GetAtt" intrinsic calls.
     * Only the resource ID is supported as an attribute; any requested attribute key
     * will result in a warning and the resource ID being returned.
     *
     * @param resourceType - The type of the resource.
     * @param key - The attribute key requested.
     * @param logicalId - The logical ID of the resource.
     * @param resource - The CloudFormation resource object.
     * @param ctx - The resolving context with additional environment information.
     * @returns The resource ID.
     */
    getAttFunc: (
        resourceType: string,
        key: string,
        logicalId: string,
        resource: CloudFormationResource,
        ctx: ResolvingContext,
    ): unknown => {
        log.trace(`Called getAttFunc, for ${resourceType}, with logicalId=${logicalId}, and key=${key}`, resource, ctx);

        // Only the resource's ID is supported as an attribute.
        log.warn(
            `Passed key ${key} for ${resourceType}, with logicalId=${logicalId} is not supported, id will be returned`,
            resource,
            ctx,
        );
        return awsApiGatewayModelFunc.idGenFunc(resourceType, logicalId, resource, ctx);
    },

    /**
     * Generates the Amazon Resource Name (ARN) for an API Gateway Model resource.
     *
     * This function constructs the ARN using the RestApiId from the resource properties,
     * combined with the region and partition obtained from the resolving context. It also
     * utilizes the model ID generated by idGenFunc. The ARN is cached on the resource object
     * to avoid redundant computations.
     *
     * @param resourceType - The type of the resource.
     * @param logicalId - The logical ID of the resource.
     * @param resource - The CloudFormation resource object.
     * @param ctx - The resolving context that provides region, partition, and other necessary details.
     * @returns The generated ARN for the resource.
     */
    arnGenFunc: (
        resourceType: string,
        logicalId: string,
        resource: CloudFormationResource,
        ctx: ResolvingContext,
    ): string => {
        log.trace(`Called arnGenFunc, for ${resourceType}, with logicalId=${logicalId}`, resource, ctx);
        if (!resource._arn) {
            // Cast the generic resource to ApiGatewayModelResource for accessing specific properties.
            const resTyped = resource as ApiGatewayModelResource;
            const region = ctx.getRegion();
            const partition = ctx.getPartition();
            // Resolve the RestApiId from the resource properties.
            const restApiId = resolveString(resTyped.Properties.RestApiId, `${resourceType}.Properties.RestApiId`, ctx);
            // Generate the model ID using idGenFunc.
            const modelId = awsApiGatewayModelFunc.idGenFunc(resourceType, logicalId, resource, ctx);

            // Construct and cache the ARN using the default API Gateway model ARN format.
            resource._arn = `arn:${partition}:apigateway:${region}::/restapis/${restApiId}/models/${modelId}`;
        }
        return resource._arn;
    },

    /**
     * Generates a unique identifier for an API Gateway Model resource.
     *
     * This function checks whether the resource already has an assigned ID. If not, it attempts to
     * resolve the model name from the resource properties. If the name is unavailable, a default
     * value is generated. The generated ID is cached on the resource object for subsequent lookups.
     *
     * @param resourceType - The type of the resource.
     * @param logicalId - The logical ID of the resource.
     * @param resource - The CloudFormation resource object.
     * @param ctx - The resolving context providing helper functions and environment details.
     * @returns The unique identifier for the resource.
     */
    idGenFunc: (
        resourceType: string,
        logicalId: string,
        resource: CloudFormationResource,
        ctx: ResolvingContext,
    ): string => {
        log.trace(`Called idGenFunc, for ${resourceType}, with logicalId=${logicalId}`, resource, ctx);
        if (!resource._id) {
            log.trace(`For ${logicalId} with type ${resourceType} id is not set, will be generated`);

            // Cast the resource to ApiGatewayModelResource to access specific properties.
            const resTyped = resource as ApiGatewayModelResource;
            // Retrieve the 'Name' property of the model.
            const name = resTyped.Properties.Name;
            // Generate a default value if the model name is not provided.
            const defaultValue = `Model-${generateAlphaNumeric(5, ctx)}`; // Not optimal, fix later
            // Resolve the model name or use the default value.
            resource._id = resolveStringWithDefault(name, defaultValue, `${resourceType}.Properties.Name`, ctx);
        }
        return resource._id;
    },
};
